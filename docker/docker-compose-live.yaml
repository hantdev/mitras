services:
  domains:
    image: mitras/domains-dev
    build:
      context: .
      dockerfile: Dockerfile.livereload
    volumes:
      - ../:/go/src/github.com/hantdev/mitras
      - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /go/src/github.com/hantdev/mitras
    entrypoint: [ "air",
                  "--build.cmd", "BUILD_DIR=/tmp make domains",
                  "--build.bin", "/tmp/domains",
                  "--build.stop_on_error", "true",
                  "--build.send_interrupt", "true",
                  "--build.include_file","dockers/.env",
                  "--build.exclude_dir", ".vscode,.git,.docker,.github,api,build,tools,scripts",
                  "--build.exclude_regex", "[\"_test\\.go\"" ,
                  "--tmp_dir", "/tmp",]

  users:
    image: mitras/users-dev
    build:
      context: .
      dockerfile: Dockerfile.livereload
    volumes:
      - ../:/go/src/github.com/hantdev/mitras
      - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /go/src/github.com/hantdev/mitras
    entrypoint: [ "air",
                  "--build.cmd", "BUILD_DIR=/tmp make users",
                  "--build.bin", "/tmp/users",
                  "--build.stop_on_error", "true",
                  "--build.send_interrupt", "true",
                  "--build.exclude_dir", ".vscode,.git,.docker,.github,api,build,tools,scripts",
                  "--build.exclude_regex", "[\"_test\\.go\"" ,
                  "--tmp_dir", "/tmp",]
  clients:
    image: mitras/clients-dev
    build:
      context: .
      dockerfile: Dockerfile.livereload
    volumes:
      - ../:/go/src/github.com/hantdev/mitras
      - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /go/src/github.com/hantdev/mitras
    entrypoint: [ "air",
                  "--build.cmd", "BUILD_DIR=/tmp make clients",
                  "--build.bin", "/tmp/clients",
                  "--build.stop_on_error", "true",
                  "--build.send_interrupt", "true",
                  "--build.exclude_dir", ".vscode,.git,.docker,.github,api,build,tools,scripts",
                  "--build.exclude_regex", "[\"_test\\.go\"" ,
                  "-tmp_dir", "/tmp",]

  channels:
    image: mitras/channels-dev
    build:
      context: .
      dockerfile: Dockerfile.livereload
    volumes:
      - ../:/go/src/github.com/hantdev/mitras
      - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /go/src/github.com/hantdev/mitras
    entrypoint: [ "air",
                  "--build.cmd", "BUILD_DIR=/tmp make channels",
                  "--build.bin", "/tmp/channels",
                  "--build.stop_on_error", "true",
                  "--build.send_interrupt", "true",
                  "--build.exclude_dir", ".vscode,.git,.docker,.github,api,build,tools,scripts",
                  "--build.exclude_regex", "[\"_test\\.go\"" ,
                  "-tmp_dir", "/tmp",]

  channels-db:
    command: ["postgres", "-c", "log_statement=all"]

  groups:
    image: mitras/groups-dev
    build:
      context: .
      dockerfile: Dockerfile.livereload
    volumes:
      - ../:/go/src/github.com/hantdev/mitras
      - $GOPATH/pkg/mod/cache:/go/pkg/mod/cache
    working_dir: /go/src/github.com/hantdev/mitras
    entrypoint: [ "air",
                  "--build.cmd", "BUILD_DIR=/tmp make groups",
                  "--build.bin", "/tmp/groups",
                  "--build.stop_on_error", "true",
                  "--build.send_interrupt", "true",
                  "--build.exclude_dir", ".vscode,.git,.docker,.github,api,build,tools,scripts",
                  "--build.exclude_regex", "[\"_test\\.go\"" ,
                  "-tmp_dir", "/tmp",]
